name: Terraform Deploy

on:
  repository_dispatch:
    types: [deploy-infrastructure]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

jobs:
  terraform:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Plan
        run: terraform plan -var-file="environments/${{ github.event.client_payload.environment || inputs.environment }}.tfvars" -out=tfplan
      
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
      
      - name: Get Outputs
        id: outputs
        run: |
          echo "bucket_name=$(terraform output -raw frontend_bucket_name)" >> $GITHUB_OUTPUT
          echo "cloudfront_id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT
          echo "cloudfront_url=$(terraform output -raw frontend_url)" >> $GITHUB_OUTPUT
      
      - name: Send outputs back to frontend repo
        if: github.event_name == 'repository_dispatch'
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.event.client_payload.callback_repo }}/dispatches \
            -d '{
              "event_type": "infrastructure-ready",
              "client_payload": {
                "bucket_name": "${{ steps.outputs.outputs.bucket_name }}",
                "cloudfront_id": "${{ steps.outputs.outputs.cloudfront_id }}",
                "cloudfront_url": "${{ steps.outputs.outputs.cloudfront_url }}"
              }
            }'
